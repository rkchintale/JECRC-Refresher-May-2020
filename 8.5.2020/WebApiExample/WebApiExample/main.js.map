{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Employee.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/employees-component/employees.component.ts","./src/app/employees-component/employees.component.html","./src/app/employees.service.ts","./src/app/home-component/home.component.ts","./src/app/home-component/home.component.html","./src/app/number-to-words.pipe.ts","./src/app/registration-component/registration.component.ts","./src/app/registration-component/registration.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class Employee\r\n{\r\n  EmpID: number;\r\n  EmpName: string;\r\n  DeptNo: number;\r\n  Salary: number;\r\n\r\n  constructor(empId: number, empName: string, deptNo: number, salary: number)\r\n  {\r\n    this.EmpID = empId;\r\n    this.EmpName = empName;\r\n    this.DeptNo = deptNo;\r\n    this.Salary = salary;\r\n  }\r\n}\r\n\r\n\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home-component/home.component';\nimport { EmployeesComponent } from './employees-component/employees.component';\nimport { RegistrationComponent } from './registration-component/registration.component';\n\nconst routes: Routes = [\n  { path: \"home\", component: HomeComponent },\n  { path: \"employees\", component: EmployeesComponent },\n  { path: \"registration\", component: RegistrationComponent },\n  { path: \"\", redirectTo: \"/home\", pathMatch: \"full\" },\n  { path: \"**\", redirectTo: \"/home\" },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent\n{\n  \n}\n\n\n\n\n\n\n","<div>\n  <a [routerLink]=\" [ '/home' ] \">Home</a> |&nbsp;\n  <a [routerLink]=\" [ '/employees' ] \">Employees</a> |&nbsp;\n  <a [routerLink]=\" [ '/registration' ] \">Registration</a> |&nbsp;\n</div>\n\n<div class=\"container-fluid\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployeesService } from \"./employees.service\";\nimport { NumberToWordsPipe } from './number-to-words.pipe';\nimport { HomeComponent } from './home-component/home.component';\nimport { RegistrationComponent } from './registration-component/registration.component';\nimport { EmployeesComponent } from './employees-component/employees.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NumberToWordsPipe,\n    HomeComponent,\n    RegistrationComponent,\n    EmployeesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [ EmployeesService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Component } from '@angular/core';\r\nimport { Employee } from '../Employee';\r\nimport { EmployeesService } from '../employees.service';\r\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'employees-comp',\r\n  templateUrl: \"employees.component.html\",\r\n  styleUrls: [ \"employees.component.css\" ]\r\n})\r\nexport class EmployeesComponent\r\n{\r\n  //properties\r\n  employees: Employee[];\r\n  loaded: boolean = false;\r\n\r\n  //create property for reactive form\r\n  newForm: FormGroup;\r\n\r\n  //constructor\r\n  constructor(private empService: EmployeesService)\r\n  {\r\n    this.employees = [];\r\n\r\n    //create reactive form\r\n    this.newForm = new FormGroup({\r\n      EmpID: new FormControl(null, [Validators.required, Validators.pattern('^[0-9]*$') ]),\r\n      EmpName: new FormControl(null, [Validators.required, Validators.pattern('^[A-Za-z .]*$')]),\r\n      DeptNo: new FormControl(null, [ Validators.pattern('^[0-9]*$') ]),\r\n      Salary: new FormControl(null, [ Validators.pattern('^[0-9]*$') ]),\r\n    });\r\n  }\r\n\r\n  //ngOnInit\r\n  ngOnInit()\r\n  {\r\n    this.empService.getEmployees().subscribe(\r\n\r\n      (response: Employee[]) => {\r\n        console.log(response);\r\n        this.employees = response;\r\n        this.loaded = true;\r\n      }, //success\r\n\r\n      (error) => {\r\n        console.log(error);\r\n      } //failure\r\n    );\r\n  }\r\n\r\n\r\n  //methods\r\n  onAddClick()\r\n  {\r\n    //console.log(this.newForm.get(\"EmpId\").untouched );\r\n\r\n    if (this.newForm.valid == true)\r\n    {\r\n      //accessing value of any form control (textbox etc.)\r\n      console.log(this.newForm.value.EmpId);\r\n\r\n      //create emp object from the value of form\r\n      var emp = new Employee(this.newForm.value.EmpID, this.newForm.value.EmpName, this.newForm.value.DeptNo, this.newForm.value.Salary);\r\n\r\n      //call service\r\n      this.empService.postEmployee(emp).subscribe(\r\n        (response) => {\r\n          console.log(response);\r\n\r\n          //add object to array\r\n          this.employees.push(emp);\r\n        }, //success\r\n\r\n        (error) => {\r\n          console.log(error);\r\n\r\n        } //error\r\n      );\r\n\r\n      \r\n\r\n      //clear textboxes\r\n      this.newForm.reset();\r\n    }\r\n    else\r\n    {\r\n      console.log(\"Invalid data\");\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n","<div class=\"row\">\r\n\r\n  <!-- left box starts -->\r\n  <div class=\"col-lg-6\">\r\n    <h4 class=\"mb-3\">Employees <i class=\"fa fa-spinner fa-spin\" *ngIf=\"loaded == false\"></i> </h4>\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr class=\"table-dark text-dark\">\r\n          <th>Emp ID</th>\r\n          <th>Emp Name</th>\r\n          <th>Dept No</th>\r\n          <th>Salary</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <tr *ngFor=\"let emp of employees\">\r\n          <td>{{emp.EmpID}}</td>\r\n          <td>{{emp.EmpName}}</td>\r\n          <td>{{emp.DeptNo}}</td>\r\n          <td>{{emp.Salary}}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <!-- left box ends -->\r\n\r\n\r\n  <!-- right box starts -->\r\n  <div class=\"col-lg-6\">\r\n    <form [formGroup]=\"newForm\">\r\n\r\n      <h5 class=\"border-bottom pb-2 mb-2\">New Employee</h5>\r\n\r\n      <div class=\"form-group form-row\">\r\n        <label for=\"EmpID\" class=\"col-md-3 col-form-label\">Employee ID:</label>\r\n        <div class=\"col-md-9\">\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"Employee ID\" name=\"EmpID\" formControlName=\"EmpID\" [ngClass]=\"{\r\n            'is-valid': newForm.get('EmpID').valid && newForm.get('EmpID').touched,\r\n            'is-invalid': newForm.get('EmpID').invalid && newForm.get('EmpID').touched\r\n          }\">\r\n\r\n          <span class=\"text-danger\" *ngIf=\"newForm.get('EmpID').invalid && newForm.get('EmpID').touched && newForm.get('EmpID').errors.required\">Employee ID can't be blank</span>\r\n\r\n          <span class=\"text-danger\" *ngIf=\"newForm.get('EmpID').invalid && newForm.get('EmpID').touched && newForm.get('EmpID').errors.pattern\">Employee ID should be number only.</span>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <!-- is-valid    : green\r\n      is-invalid : red -->\r\n\r\n      <div class=\"form-group form-row\">\r\n        <label for=\"empName\" class=\"col-md-3 col-form-label\">Employee Name:</label>\r\n        <div class=\"col-md-9\">\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"Employee Name\" name=\"empName\" formControlName=\"EmpName\">\r\n\r\n          <span class=\"text-danger\" *ngIf=\"newForm.get('EmpName').invalid && newForm.get('EmpName').touched && newForm.get('EmpName').errors.required\">Employee Name can't be blank</span>\r\n\r\n          <span class=\"text-danger\" *ngIf=\"newForm.get('EmpName').invalid && newForm.get('EmpName').touched && newForm.get('EmpName').errors.pattern\">Employee Name can contain alphabets, dot (.) and space</span>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div class=\"form-group form-row\">\r\n        <label for=\"DeptNo\" class=\"col-md-3 col-form-label\">Dept No:</label>\r\n        <div class=\"col-md-9\">\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"Dept No\" name=\"DeptNo\" formControlName=\"DeptNo\">\r\n\r\n          <span class=\"text-danger\" *ngIf=\"newForm.get('DeptNo').invalid && newForm.get('DeptNo').touched && newForm.get('DeptNo').errors.pattern\">Dept No should be only numbers.</span>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div class=\"form-group form-row\">\r\n        <label for=\"Salary\" class=\"col-md-3 col-form-label\">Salary:</label>\r\n        <div class=\"col-md-9\">\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"Salary\" name=\"Salary\" formControlName=\"Salary\">\r\n\r\n          <span class=\"text-danger\" *ngIf=\"newForm.get('Salary').invalid && newForm.get('Salary').touched && newForm.get('Salary').errors.pattern\">Salary should be only numbers.</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"text-center\">\r\n        <button class=\"btn btn-success\" (click)=\"onAddClick()\">Add</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n  <!-- right box ends -->\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Employee } from './Employee';\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable( )\r\nexport class EmployeesService\r\n{\r\n  constructor(private httpClient: HttpClient)\r\n  {\r\n  }\r\n\r\n  apiPrefix: string = \"http://localhost:55818\";\r\n\r\n  getEmployees()\r\n  {\r\n    return this.httpClient.get<Employee[]>(this.apiPrefix + \"/api/employees\");\r\n  }\r\n\r\n  postEmployee(emp: Employee)\r\n  {\r\n    return this.httpClient.post<Employee>(this.apiPrefix + \"/api/employees\", emp);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n//200 = OK\r\n//400 = Bad Request\r\n//404 = Not Found\r\n//500 = Internal Server Error (exception at server side)\r\n","import { Component } from '@angular/core';\r\nimport { EmployeesService } from '../employees.service';\r\n\r\n@Component({\r\n  selector: 'home-comp',\r\n  templateUrl: \"home.component.html\",\r\n  styleUrls: [ \"home.component.css\" ]\r\n})\r\nexport class HomeComponent\r\n{\r\n}\r\n\r\n\r\n","<div>Home</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: \"words\"\r\n})\r\nexport class NumberToWordsPipe implements PipeTransform\r\n{\r\n  transform(value: number)\r\n  {\r\n    let w = [ \"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\", \"Ten\" ];\r\n    let digits = [];\r\n    let str = \"\";\r\n\r\n    digits = value.toString().split(\"\");\r\n    //console.log(digits);\r\n     \r\n    for (let i = 0; i < digits.length; i++)\r\n    {\r\n      str = str + w[ Number(digits[i]) ] + \" \";\r\n    }\r\n    return str;\r\n  }\r\n}\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'registration-comp',\r\n  templateUrl: \"registration.component.html\",\r\n  styleUrls: [ \"registration.component.css\" ]\r\n})\r\nexport class RegistrationComponent\r\n{\r\n  constructor()\r\n  {\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n  }\r\n}\r\n\r\n\r\n","<div>Registration</div>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}